name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run unit tests
        run: pytest
        # Ou use o comando correspondente para executar seus testes unitários

      - name: Build application
        run: echo "Building application"
        # Adicione aqui os comandos necessários para construir sua aplicação

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: my-app
          path: .

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: test

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: my-app

      - name: Deploy to test environment
        run: |
          # Adicione aqui os comandos necessários para fazer o deploy da sua aplicação no ambiente de teste
          # Por exemplo, você pode usar ferramentas como Docker ou Heroku para fazer o deploy

  notify:
    needs: [build, deploy]
    runs-on: ubuntu-latest

    steps:
      - name: Send email on failure
        if: failure()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.example.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: 'CI/CD Pipeline Failed'
          to: ${{ github.actor }}@example.com
          body: 'The CI/CD pipeline failed for your project.'
